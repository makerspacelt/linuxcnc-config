
# ########################################
# Derived from example hm2-stepper config
# And Marius Alksnys previous work
# ########################################

# Launch the setup script to make sure hardware setup looks good
loadusr -w ./pre-run.sh

# ###################################
# Core EMC/HAL Loads
# ###################################

# kinematics
loadrt trivkins

# motion controller, get name and thread periods from ini file
# trajectory planner
loadrt tp
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES tp=tp kins=trivkins

# load low-level drivers
loadrt hal_bb_gpio output_pins=126 input_pins=108,109,110,114
loadrt [PRUCONF](DRIVER) prucode=$(HAL_RTMOD_DIR)/[PRUCONF](PRUBIN) [PRUCONF](CONFIG) halname=hpg

# Deboune conponent
newinst debounce dbc pincount=1


# ################################################
# THREADS
# ################################################

addf hpg.capture-position                 servo-thread
addf hpg.update                           servo-thread
addf motion-command-handler               servo-thread
addf motion-controller                    servo-thread
addf bb_gpio.write                        servo-thread
addf bb_gpio.read						  servo-thread
addf dbc.funct							  servo-thread


# ################
# X [0] Axis
# ################

# axis enable chain
newsig emcmot.00.enable bit
sets emcmot.00.enable FALSE

net emcmot.00.enable <= axis.0.amp-enable-out
net emcmot.00.enable => hpg.stepgen.00.enable

# position command and feedback
net emcmot.00.pos-cmd <= axis.0.motor-pos-cmd
net emcmot.00.pos-cmd => hpg.stepgen.00.position-cmd

net motor.00.pos-fb <= hpg.stepgen.00.position-fb
net motor.00.pos-fb => axis.0.motor-pos-fb

# timing parameters
setp hpg.stepgen.00.dirsetup        200 #[AXIS_0]DIRSETUP
setp hpg.stepgen.00.dirhold         200 #[AXIS_0]DIRHOLD

setp hpg.stepgen.00.steplen         1000 #[AXIS_0]STEPLEN
setp hpg.stepgen.00.stepspace       1000 #[AXIS_0]STEPSPACE

setp hpg.stepgen.00.position-scale  [AXIS_0]SCALE

setp hpg.stepgen.00.maxaccel        [AXIS_0]STEPGEN_MAX_ACC

setp hpg.stepgen.00.steppin         0x4C
setp hpg.stepgen.00.dirpin          0x4D


# ################
# Y [1] Axis
# ################

# axis enable chain
newsig emcmot.01.enable bit
sets emcmot.01.enable FALSE

net emcmot.01.enable <= axis.1.amp-enable-out
net emcmot.01.enable => hpg.stepgen.01.enable

# position command and feedback
net emcmot.01.pos-cmd <= axis.1.motor-pos-cmd
net emcmot.01.pos-cmd => hpg.stepgen.01.position-cmd

net motor.01.pos-fb <= hpg.stepgen.01.position-fb
net motor.01.pos-fb => axis.1.motor-pos-fb

# timing parameters
setp hpg.stepgen.01.dirsetup        200 #[AXIS_1]DIRSETUP
setp hpg.stepgen.01.dirhold         200 #[AXIS_1]DIRHOLD

setp hpg.stepgen.01.steplen         1000 #[AXIS_1]STEPLEN
setp hpg.stepgen.01.stepspace       1000 #[AXIS_1]STEPSPACE

setp hpg.stepgen.01.position-scale  [AXIS_1]SCALE

setp hpg.stepgen.01.maxaccel        [AXIS_1]STEPGEN_MAX_ACC

setp hpg.stepgen.01.steppin         0x4E
setp hpg.stepgen.01.dirpin          0x4F


# ################
# Z [2] Axis
# ################

# axis enable chain
newsig emcmot.02.enable bit
sets emcmot.02.enable FALSE

net emcmot.02.enable <= axis.2.amp-enable-out
net emcmot.02.enable => hpg.stepgen.02.enable

# position command and feedback
net emcmot.02.pos-cmd <= axis.2.motor-pos-cmd
net emcmot.02.pos-cmd => hpg.stepgen.02.position-cmd

net motor.02.pos-fb <= hpg.stepgen.02.position-fb
net motor.02.pos-fb => axis.2.motor-pos-fb

# timing parameters
setp hpg.stepgen.02.dirsetup        200 #[AXIS_2]DIRSETUP
setp hpg.stepgen.02.dirhold         200 #[AXIS_2]DIRHOLD

setp hpg.stepgen.02.steplen         1000 #[AXIS_2]STEPLEN
setp hpg.stepgen.02.stepspace       1000 #[AXIS_2]STEPSPACE

setp hpg.stepgen.02.position-scale  [AXIS_2]SCALE

setp hpg.stepgen.02.maxaccel        [AXIS_2]STEPGEN_MAX_ACC

setp hpg.stepgen.02.steppin         0x50
setp hpg.stepgen.02.dirpin          0x51


# ##################################################
# Standard I/O - EStop, Enables, Limit Switches, Etc
# ##################################################

# create signals for tool loading loopback
net tool-prep-loop iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
net tool-change-loop iocontrol.0.tool-change => iocontrol.0.tool-changed

# Remote E-Stop debounced
setp dbc.delay 5
net estop-ext-raw bb_gpio.p8.in-14 => dbc.0.in
net estop-ext dbc.0.out => iocontrol.0.emc-enable-in
setp bb_gpio.p8.in-14.invert 1


#TODO:
#oadusr -W hal_manualtoolchange
#net tool-change iocontrol.0.tool-change => hal_manualtoolchange.change
#net tool-changed iocontrol.0.tool-changed <= hal_manualtoolchange.changed
#net tool-number iocontrol.0.tool-prep-number => hal_manualtoolchange.number
#net tool-prepare-loopback iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
